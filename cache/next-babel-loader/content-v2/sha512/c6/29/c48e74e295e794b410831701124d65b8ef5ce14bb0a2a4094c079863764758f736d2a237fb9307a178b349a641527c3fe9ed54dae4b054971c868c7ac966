{"ast":null,"code":"import { Collapse } from 'reactstrap';\nimport { Link, Events, scrollSpy } from 'react-scroll';\nimport { useContext, useEffect, useMemo, useState } from 'react';\nimport styles from './ContentTable.module.scss';\nimport useWindowSize from '../../../hooks/useWindowSize';\nimport classNames from 'classnames';\nimport { Context } from '../../../context/context';\nimport { en } from '../../../config/en';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ContentTable = function ContentTable(_ref) {\n  var _subtitles, _subtitles2, _subtitles3;\n\n  var data = _ref.data;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useContext = useContext(Context),\n      scrollTop = _useContext.scrollTop,\n      contentTop = _useContext.contentTop;\n\n  var toggleCollapse = function toggleCollapse() {\n    return setIsOpen(!isOpen);\n  };\n\n  var windowSize = useWindowSize();\n  var TableOfContents = en.TableOfContents;\n  var subtitles = data.subtitles,\n      isNoTableOfContents = data.isNoTableOfContents;\n  if (isNoTableOfContents) return /*#__PURE__*/_jsx(_Fragment, {});\n\n  var _useState2 = useState(null),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      isClicked = _useState3[0],\n      setIsClicked = _useState3[1];\n\n  var _useState4 = useState(false),\n      isTableSticky = _useState4[0],\n      setIsTableSticky = _useState4[1];\n\n  var _useState5 = useState([]),\n      zeroElementHeight = _useState5[0],\n      setZeroElementHeight = _useState5[1];\n\n  var isDesktop = useMemo(function () {\n    return windowSize.width >= 1200;\n  }, [windowSize.width]);\n  var isTablet = useMemo(function () {\n    return windowSize.width >= 768 && windowSize.width < 1200;\n  }, [windowSize.width]);\n  var isMobile = useMemo(function () {\n    return windowSize.width < 768;\n  }, [windowSize.width]);\n  var ADDITIONAL_OFFSET = useMemo(function () {\n    if (isMobile) {\n      return 110;\n    } else if (isTablet) {\n      return 90;\n    } else {\n      return 60;\n    }\n  }, [windowSize.width]);\n  useEffect(function () {\n    if (true) {\n      //get height of zero element\n      var descriptionElement = document.getElementById('sub0');\n      var offsetTop = descriptionElement.offsetTop,\n          offsetHeight = descriptionElement.offsetHeight; //calculate height of zero element\n\n      setZeroElementHeight(offsetTop + offsetHeight - (ADDITIONAL_OFFSET + 10));\n\n      if (zeroElementHeight < window.scrollY && window.scrollY !== 0) {\n        setIsTableSticky(true);\n      } else {\n        setIsTableSticky(false);\n      }\n    }\n  }, [scrollTop]);\n  useEffect(function () {\n    if (true) {\n      var contentTable = document.getElementById('wrapperOfContentTable');\n      var getInTouchHeight = document.getElementById('getInTouchBlockInArticle').offsetHeight;\n\n      if (contentTable) {\n        contentTable.style.maxHeight = \"\".concat(windowSize.height - 60, \"px\");\n      }\n\n      if (isDesktop) {\n        contentTable.style.height = 'auto';\n        contentTable.style.maxHeight = \"\".concat(windowSize.height - getInTouchHeight - 102, \"px\");\n        contentTable.style.overflow = 'scroll';\n      }\n    }\n  }, [windowSize.width, windowSize.height]);\n\n  var handleScroll = function handleScroll(i) {\n    //get & set active element id\n    if (!isClicked) {\n      var activeValue = +i.replace(/sub/, '');\n      setActive(activeValue);\n    }\n  };\n\n  var _onSetInactive = function onSetInactive(i) {\n    //get and clear last element if scroll goes out of last element\n    var inActiveValue = +i.replace(/sub/, '');\n\n    if (inActiveValue === subtitles.length && inActiveValue === active) {\n      setActive(0);\n    }\n  };\n\n  useEffect(function () {\n    if (!isDesktop) {\n      if (isOpen) {\n        document.body.classList.add('no-sroll');\n      } else {\n        document.body.classList.remove('no-sroll');\n      }\n    }\n  }, [isOpen]);\n  var isShow = useMemo(function () {\n    return scrollTop > contentTop;\n  }, [scrollTop, contentTop]);\n  var containerStyles = useMemo(function () {\n    return {\n      tablet: {\n        position: isTableSticky ? 'relative' : 'absolute'\n      },\n      desktop: {\n        position: 'relative',\n        width: '100%'\n      }\n    };\n  }, [isTableSticky]);\n  var setIsClickedWhitDebounce = useDebouncedCallback(setIsClicked, 1000);\n  useEffect(function () {\n    Events.scrollEvent.register('begin', function (to) {\n      var activeValue = +to.replace(/sub/, '');\n      setActive(activeValue);\n      setIsClicked(true); //change isClicked after 1 sec to false\n\n      setIsClickedWhitDebounce.callback(false); //close modal\n\n      setIsOpen(false);\n    });\n    scrollSpy.update();\n    return function () {\n      Events.scrollEvent.remove('begin');\n    };\n  }, [active, isOpen]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(styles.wrapper, !isDesktop && isTableSticky && styles.withStickyState, 'container'),\n      style: {\n        position: !isDesktop && isTableSticky ? 'fixed' : 'sticky'\n      },\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        style: isDesktop ? containerStyles.desktop : containerStyles.tablet,\n        className: classNames(styles.container, !isDesktop && isTableSticky && styles.containerFixed),\n        id: \"wrapperOfContentTable\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.header,\n          children: [scrollTop > zeroElementHeight && !isDesktop ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [isTablet && /*#__PURE__*/_jsx(\"h3\", {\n              className: styles.headerContent,\n              children: \"CONTENT:\"\n            }), /*#__PURE__*/_jsx(\"h3\", {\n              className: styles.subTitle,\n              children: ((_subtitles = subtitles[active - 1]) === null || _subtitles === void 0 ? void 0 : _subtitles.title.length) > 46 ? \"\".concat((_subtitles2 = subtitles[active - 1]) === null || _subtitles2 === void 0 ? void 0 : _subtitles2.title.slice(0, 46), \"...\") : (_subtitles3 = subtitles[active - 1]) === null || _subtitles3 === void 0 ? void 0 : _subtitles3.title\n            })]\n          }) : /*#__PURE__*/_jsx(\"h3\", {\n            className: styles.title,\n            children: TableOfContents\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.openBlock,\n            onClick: toggleCollapse,\n            children: !isOpen ? /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"ins\", {\n                children: isMobile ? 'More' : 'Show more'\n              }), /*#__PURE__*/_jsx(\"img\", {\n                src: \"/images/blog/elements/greenNavDown.svg\",\n                alt: \"img\"\n              })]\n            }) : /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"ins\", {\n                children: isMobile ? 'Less' : 'Show less'\n              }), /*#__PURE__*/_jsx(\"img\", {\n                src: \"/images/blog/elements/greenNavUp.svg\",\n                alt: \"img\"\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsx(Collapse, {\n          isOpen: isDesktop ? true : isOpen,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            id: \"content\",\n            className: classNames(styles.content, isShow && !isMobile && styles.tabletPadding),\n            children: [!isShow && !isDesktop && /*#__PURE__*/_jsx(\"div\", {\n              className: styles.line\n            }), isDesktop && /*#__PURE__*/_jsx(\"div\", {\n              className: styles.line\n            }), subtitles.map(function (item, i) {\n              return /*#__PURE__*/_jsxs(Link // activeClass={styles.picked}\n              , {\n                to: \"sub\".concat(item.id),\n                spy: true,\n                spyThrottle: 300,\n                smooth: \"linear\",\n                offset: -ADDITIONAL_OFFSET,\n                duration: 300,\n                isDynamic: true,\n                onSetInactive: function onSetInactive(i) {\n                  return _onSetInactive(i);\n                },\n                onSetActive: function onSetActive(i) {\n                  return handleScroll(i);\n                },\n                className: classNames(styles.pickedBlock, active === item.id && styles.picked),\n                children: [/*#__PURE__*/_jsx(\"img\", {\n                  src: \"/images/blog/elements/blogArrow.svg\",\n                  alt: \"icon\"\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.item,\n                  style: {\n                    paddingLeft: item.subtitle ? 10 : 0\n                  },\n                  children: item.title\n                })]\n              }, i);\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default ContentTable;","map":null,"metadata":{},"sourceType":"module"}