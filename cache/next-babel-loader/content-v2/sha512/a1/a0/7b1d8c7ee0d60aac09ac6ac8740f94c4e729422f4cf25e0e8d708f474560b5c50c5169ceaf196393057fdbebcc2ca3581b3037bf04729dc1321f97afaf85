{"ast":null,"code":"import _classCallCheck from \"E:/corporate-website/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/corporate-website/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/corporate-website/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/corporate-website/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"E:/corporate-website/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:/corporate-website/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"E:/corporate-website/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { withRouter } from \"next/router\"; // utils\n\nimport animatedScrollTo from \"./utils/animated-scroll-to\";\nimport isMobileDevice from \"./utils/is-mobile\";\nimport { getObjectValues } from \"./utils/helpers\";\nimport S from \"./style/scroll.module.scss\";\nimport { caseSidebarEventListener, clientsAboutUsBtnEventListeners } from \"./utils/eventListeners\"; // Components\n\nimport ScrollSection from \"./ScrollSection\";\nimport ScrollControls from \"./ScrollControls\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar scrollMode = {\n  FULL_PAGE: \"full-page\",\n  NORMAL: \"normal\"\n};\nexport var Scroll = /*#__PURE__*/function (_React$Component) {\n  _inherits(Scroll, _React$Component);\n\n  var _super = _createSuper(Scroll);\n\n  function Scroll(props) {\n    var _this;\n\n    _classCallCheck(this, Scroll);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function () {\n      _this._slides = [];\n\n      if (window.innerWidth < 1200 || window.innerHeight < 411) {\n        _this._scrollMode = scrollMode.NORMAL;\n      } else _this._scrollMode = scrollMode.FULL_PAGE;\n\n      for (var i = 0; i < _this._slidesCount; i++) {\n        _this._slides.push(window.innerHeight * i);\n      }\n\n      _this.setState({\n        height: window.innerHeight\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchStart\", function (evt) {\n      _this._touchStart = evt.touches[0].clientY;\n      _this._isScrolledAlready = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchMove\", function (evt) {\n      if (_this._scrollMode !== scrollMode.FULL_PAGE) {\n        return;\n      }\n\n      evt.preventDefault();\n      var touchEnd = evt.changedTouches[0].clientY;\n\n      if (!_this._isScrollPending && !_this._isScrolledAlready) {\n        if (_this._touchStart > touchEnd + _this._touchSensitivity) {\n          _this.scrollToSlide(_this.state.activeSlide + 1);\n        } else if (_this._touchStart < touchEnd - _this._touchSensitivity) {\n          _this.scrollToSlide(_this.state.activeSlide - 1);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onScroll\", function (evt) {\n      if (_this._scrollMode !== scrollMode.FULL_PAGE) {\n        return;\n      }\n\n      evt.preventDefault();\n\n      if (_this._isScrollPending) {\n        return;\n      }\n\n      var scrollDown = (evt.wheelDelta || -evt.deltaY || -evt.detail) < 0;\n\n      if (scrollDown) {\n        _this.scrollToSlide(_this.state.activeSlide + 1);\n      } else {\n        _this.scrollToSlide(_this.state.activeSlide - 1);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSlidesCount\", function () {\n      return _this._slidesCount;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCurrentSlideIndex\", function () {\n      return _this.state.activeSlide;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollNext\", function () {\n      _this.scrollToSlide(_this.state.activeSlide + 1);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollPrev\", function () {\n      _this.scrollToSlide(_this.state.activeSlide - 1);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollToSlide\", function (slide) {\n      if (!_this._isScrollPending && slide >= 0 && slide < _this._slidesCount) {\n        var currentSlide = _this.state.activeSlide;\n\n        _this.props.beforeChange({\n          from: currentSlide,\n          to: slide\n        });\n\n        sessionStorage.setItem(\"slide\", slide);\n\n        _this.setState({\n          activeSlide: slide\n        });\n\n        _this._isScrollPending = true;\n        animatedScrollTo(_this._slides[slide], _this.props.duration, function () {\n          _this._isScrollPending = false;\n          _this._isScrolledAlready = true;\n\n          _this.props.afterChange({\n            from: currentSlide,\n            to: slide\n          });\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollToSlideTablet\", function (slide) {\n      var elem = document.getElementById(\"caseSection-\".concat(slide));\n\n      _this.setState({\n        activeSlide: slide\n      });\n\n      sessionStorage.setItem(\"slide\", slide);\n      elem.scrollIntoView({\n        block: \"start\",\n        behavior: \"smooth\"\n      });\n    });\n\n    _this._isScrollPending = false;\n    _this._isScrolledAlready = false;\n    _this._slides = [];\n    _this._slidesCount = Scroll.getChildrenCount(_this.props.children) + _this.props.additionalElements;\n    _this._touchSensitivity = 5;\n    _this._touchStart = 0;\n    _this._isMobile = null;\n    _this._scrollMode = scrollMode.FULL_PAGE;\n    _this.state = {\n      activeSlide: props.initialSlide\n    };\n    return _this;\n  }\n\n  _createClass(Scroll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // scroll to previous page slide\n      var shouldScrollRestore = JSON.parse(sessionStorage.getItem(\"shouldScrollRestore\"));\n      var scrollPos = JSON.parse(sessionStorage.getItem(this.props.router.asPath));\n\n      if (shouldScrollRestore && scrollPos) {\n        this.setState({\n          activeSlide: +scrollPos.slide\n        });\n        sessionStorage.setItem(\"slide\", scrollPos.slide);\n\n        if (window.innerWidth < 1200) {\n          window.scroll(0, +scrollPos.y);\n        }\n      } else {\n        this.setState({\n          activeSlide: 0\n        });\n        sessionStorage.setItem(\"slide\", \"0\");\n      } // end scroll to previous page slide\n\n\n      this._isMobile = isMobileDevice();\n\n      if (this._isMobile) {\n        document.addEventListener(\"touchmove\", this.onTouchMove, {\n          passive: false\n        });\n        document.addEventListener(\"touchstart\", this.onTouchStart);\n      } else {\n        document.addEventListener(\"wheel\", this.onScroll, {\n          passive: false\n        });\n      }\n\n      window.addEventListener(\"resize\", this.onResize);\n      var casePageScrollItems = document.getElementsByClassName(\"caseScroll\");\n      caseSidebarEventListener(casePageScrollItems, this.scrollToSlide, this.scrollToSlideTablet);\n      clientsAboutUsBtnEventListeners(this.scrollToSlide);\n      this.onResize(); //hide scrollbar\n\n      document.body.style.overflow = \"hidden\";\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this._scrollMode == \"normal\") {\n        document.body.style.overflow = \"visible\";\n      }\n\n      if (this._scrollMode == \"full-page\") {\n        document.body.style.overflow = \"hidden\";\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isMobile) {\n        document.removeEventListener(\"touchmove\", this.onTouchMove);\n        document.removeEventListener(\"touchstart\", this.onTouchStart);\n      } else {\n        document.removeEventListener(\"wheel\", this.onScroll);\n      }\n\n      window.removeEventListener(\"resize\", this.onResize);\n      document.body.style.overflow = \"visible\";\n      sessionStorage.setItem(\"scrollY\", window.scrollY);\n    }\n  }, {\n    key: \"renderControls\",\n    value: function renderControls() {\n      var _this$props = this.props,\n          controls = _this$props.controls,\n          controlsProps = _this$props.controlsProps,\n          titles = _this$props.titles;\n      if (!controls) return null;\n      var controlsBasicProps = {\n        activeSlide: this.state.activeSlide,\n        getCurrentSlideIndex: this.getCurrentSlideIndex,\n        onNext: this.scrollNext,\n        onPrev: this.scrollPrev,\n        scrollToSlide: this.scrollToSlide,\n        slidesCount: this.getSlidesCount(),\n        titles: titles\n      };\n\n      if (controls === true) {\n        return /*#__PURE__*/_jsx(ScrollControls, _objectSpread(_objectSpread({}, controlsBasicProps), controlsProps));\n      }\n\n      var CustomControls = controls;\n      return /*#__PURE__*/_jsx(CustomControls, _objectSpread(_objectSpread({}, controlsBasicProps), controlsProps));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: classNames(S.Scroll, this.props.className, this._scrollMode === scrollMode.NORMAL ? S[\"Scroll--normal\"] : \"\"),\n        children: [this.renderControls(), this.props.children, !this.props.router.asPath.includes(\"our-work\") && !this.props.router.asPath.includes(\"get-started\") && /*#__PURE__*/_jsx(\"div\", {\n          className: S.mouseWrapper,\n          onClick: function onClick() {\n            return _this2.scrollToSlide(1);\n          },\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: S.mouse,\n            children: /*#__PURE__*/_jsx(\"p\", {\n              children: \"Scroll\"\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Scroll;\n}(React.Component);\n\n_defineProperty(Scroll, \"defaultProps\", {\n  afterChange: function afterChange() {},\n  beforeChange: function beforeChange() {},\n  controls: true,\n  controlsProps: {},\n  duration: 1000,\n  initialSlide: 0,\n  additionalElements: 1\n});\n\n_defineProperty(Scroll, \"getChildrenCount\", function (children) {\n  var childrenArr = React.Children.toArray(children);\n  var slides = childrenArr.filter(function (_ref) {\n    var type = _ref.type;\n    return type === ScrollSection;\n  });\n  return slides.length;\n});\n\nexport default withRouter(Scroll);","map":null,"metadata":{},"sourceType":"module"}