{"ast":null,"code":"var _jsxFileName = \"E:\\\\corporate-website\\\\components\\\\Scroll\\\\ScrollControls.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport S from \"./style/scroll.module.scss\"; // icons\n\nimport ArrowIco from \"../../assets/icons/scroll-arrow.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar scrollPosition = {\n  TOP: \"top\",\n  MIDDLE: \"middle\",\n  BOTTOM: \"bottom\"\n};\n\nvar ScrollControls = function ScrollControls(props) {\n  _s();\n\n  var activeSlide = props.activeSlide,\n      slidesCount = props.slidesCount,\n      onPrev = props.onPrev,\n      onNext = props.onNext,\n      scrollToSlide = props.scrollToSlide,\n      titles = props.titles;\n\n  var _useState = useState(scrollPosition.TOP),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  var isFullsreen = global.window && window.document.fullscreen;\n  useEffect(function () {\n    if (isFullsreen === false) {\n      scrollToSlide(activeSlide);\n    }\n\n    if (activeSlide === 0) setPosition(scrollPosition.TOP);else if (activeSlide > 0 && activeSlide < slidesCount - 1) setPosition(scrollPosition.MIDDLE);else setPosition(scrollPosition.BOTTOM);\n  }, [activeSlide, isFullsreen]);\n\n  var getClassName = function getClassName() {\n    switch (position) {\n      case scrollPosition.TOP:\n        return S[\"ScrollControls--top\"];\n\n      case scrollPosition.BOTTOM:\n        return S[\"ScrollControls--bottom\"];\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames(S.ScrollControls, getClassName()),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: S.ScrollControls__wrp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: S.ScrollControls__top,\n        onClick: onPrev,\n        children: /*#__PURE__*/_jsxDEV(ArrowIco, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this), titles.map(function (el, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: S.dotParent,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: function onClick() {\n              return scrollToSlide(i);\n            },\n            className: classNames(S.controlsDot, i === activeSlide && S.activeDot)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 12\n          }, _this), el && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 18\n          }, _this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: S.ScrollControls__bottom,\n        onClick: onNext,\n        children: /*#__PURE__*/_jsxDEV(ArrowIco, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ScrollControls, \"c0BaNdJ/VtALyFIMAdhyG20eXjg=\");\n\n_c = ScrollControls;\nexport default ScrollControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollControls\");","map":{"version":3,"sources":["E:/corporate-website/components/Scroll/ScrollControls.jsx"],"names":["React","useEffect","useState","PropTypes","classNames","S","ArrowIco","scrollPosition","TOP","MIDDLE","BOTTOM","ScrollControls","props","activeSlide","slidesCount","onPrev","onNext","scrollToSlide","titles","position","setPosition","isFullsreen","global","window","document","fullscreen","getClassName","ScrollControls__wrp","ScrollControls__top","map","el","i","dotParent","controlsDot","activeDot","ScrollControls__bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport S from \"./style/scroll.module.scss\";\r\n\r\n// icons\r\nimport ArrowIco from \"../../assets/icons/scroll-arrow.svg\";\r\n\r\nconst scrollPosition = {\r\n  TOP: \"top\",\r\n  MIDDLE: \"middle\",\r\n  BOTTOM: \"bottom\",\r\n};\r\n\r\nconst ScrollControls = (props) => {\r\n  const { activeSlide, slidesCount, onPrev, onNext, scrollToSlide, titles } =\r\n    props;\r\n  const [position, setPosition] = useState(scrollPosition.TOP);\r\n\r\n  const isFullsreen = global.window && window.document.fullscreen;  \r\n  \r\n  useEffect(() => {\r\n    if (isFullsreen === false) {\r\n      scrollToSlide(activeSlide)\r\n    }\r\n    if (activeSlide === 0) setPosition(scrollPosition.TOP);\r\n    else if (activeSlide > 0 && activeSlide < slidesCount - 1)\r\n      setPosition(scrollPosition.MIDDLE);\r\n    else setPosition(scrollPosition.BOTTOM);\r\n  }, [activeSlide, isFullsreen]);\r\n\r\n  const getClassName = () => {\r\n    switch (position) {\r\n      case scrollPosition.TOP:\r\n        return S[\"ScrollControls--top\"];\r\n      case scrollPosition.BOTTOM:\r\n        return S[\"ScrollControls--bottom\"];\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className={classNames(S.ScrollControls, getClassName())}>\r\n      <div className={S.ScrollControls__wrp}>\r\n        <div className={S.ScrollControls__top} onClick={onPrev}>\r\n          <ArrowIco />\r\n        </div>\r\n        {titles.map((el, i) => {\r\n          return(\r\n          <div key={i} className={S.dotParent}> \r\n           <div\r\n            onClick={() => scrollToSlide(i)}\r\n            className={classNames(\r\n              S.controlsDot,\r\n              i === activeSlide && S.activeDot\r\n            )}\r\n          />\r\n          {el && <p>{el}</p>}\r\n        </div> \r\n        )})}\r\n        <div className={S.ScrollControls__bottom} onClick={onNext}>\r\n          <ArrowIco />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollControls;\r\n"]},"metadata":{},"sourceType":"module"}