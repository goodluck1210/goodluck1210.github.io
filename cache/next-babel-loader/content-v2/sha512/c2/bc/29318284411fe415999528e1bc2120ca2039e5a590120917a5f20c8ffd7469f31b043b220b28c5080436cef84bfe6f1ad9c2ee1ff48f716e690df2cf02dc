{"ast":null,"code":"import { useState, useRef, useMemo, useCallback, useEffect } from 'react';\nimport Link from 'next/link';\nimport { blogFilters } from '../../../config/constants';\nimport useWindowSize from '../../../hooks/useWindowSize';\nimport blogArticles from '../../../assets/data/blogArticles.json';\nimport { findBlogFilters } from '../../../utils/findBlogFilters';\nimport SearchIcon from '../../../assets/icons/searchIcon.svg';\nimport CrossIcon from '../../../assets/icons/inputCross.svg';\nimport Input from '../../../components/_elements/CustomInput/CustomInput';\nimport styles from './Header.module.scss';\nimport cn from 'classnames';\nimport { useRouter } from 'next/router';\nimport routing from '../../../config/routing.js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Header = ({\n  handleChange,\n  setSearchValue,\n  searchValue\n}) => {\n  const {\n    0: inputRef,\n    1: setInpurRef\n  } = useState(null);\n  const router = useRouter();\n  const {\n    width\n  } = useWindowSize();\n  const category = router.pathname === routing().blog ? blogFilters[0].name : router.pathname.replace(`${routing().blog}/`, '');\n  const {\n    0: isHide,\n    1: setIsHide\n  } = useState(false);\n  const {\n    0: zIndex,\n    1: setZIndex\n  } = useState(false);\n  const arrow = useRef(null);\n  const availablBlogFilters = useMemo(() => findBlogFilters(blogArticles, blogFilters), [blogArticles]);\n  useEffect(() => {\n    if (isHide && inputRef) {\n      inputRef.focus();\n    }\n  }, [isHide, inputRef]);\n\n  const handleMobileDropdownItem = () => {\n    const {\n      current\n    } = arrow || {};\n    setZIndex(!zIndex);\n\n    if (current) {\n      if (current.style.transform === '' || current.style.transform === 'rotate(180deg)') {\n        current.style.transform = 'rotate(0deg)';\n        return;\n      }\n\n      current.style.transform = 'rotate(180deg)';\n    }\n  };\n\n  const setRef = useCallback(ref => {\n    setInpurRef(ref);\n  }, [inputRef, setInpurRef]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: cn(styles.filters, isHide && styles.hide),\n      children: [width <= 1200 ? /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.dropdown,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsxs(\"a\", {\n            onClick: handleMobileDropdownItem,\n            children: [category, /*#__PURE__*/_jsx(\"img\", {\n              height: 7,\n              width: 42,\n              src: \"/navigateDown.svg\",\n              ref: arrow,\n              alt: \"icon\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: cn(styles.dropdownItemWrapper, `dropdown`, zIndex && styles.changeZIndex),\n          children: availablBlogFilters.map(({\n            name,\n            link\n          }, key) => /*#__PURE__*/_jsx(\"div\", {\n            className: styles.dropdownItem,\n            children: /*#__PURE__*/_jsx(Link, {\n              href: link,\n              children: /*#__PURE__*/_jsx(\"a\", {\n                id: name,\n                children: name\n              })\n            })\n          }, key))\n        })]\n      }) : /*#__PURE__*/_jsx(\"div\", {\n        className: styles.deskDropdown,\n        children: availablBlogFilters.map(({\n          name,\n          link\n        }, key) => /*#__PURE__*/_jsx(Link, {\n          href: link,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: cn(styles.deskDropdownItem, category === name && styles.selected),\n            children: name\n          })\n        }, key))\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.search,\n        onClick: () => setIsHide(true),\n        children: /*#__PURE__*/_jsx(SearchIcon, {})\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: cn(styles.inputWrapper, !isHide && styles.hide),\n      children: [/*#__PURE__*/_jsx(Input, {\n        forwardRef: setRef,\n        placeholder: \"Search\",\n        type: \"text\",\n        className: styles.input,\n        onChange: handleChange,\n        name: \"search\",\n        value: searchValue\n      }), /*#__PURE__*/_jsx(CrossIcon, {\n        className: styles.cross,\n        onClick: () => {\n          setIsHide(false);\n          setSearchValue('');\n        }\n      }), /*#__PURE__*/_jsx(SearchIcon, {\n        className: styles.search\n      })]\n    })]\n  });\n};\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}