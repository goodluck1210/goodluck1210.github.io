{"ast":null,"code":"import React from \"react\";\nimport { CHART_COLORS } from \"../../../config/constants\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport { getGraphIndex } from \"../../../utils/getGraphIndex\";\nimport styles from \"../OurPercentageComponent/ourPercentageComponent.module.scss\";\nimport classNames from \"classnames\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ChartPercentege(props) {\n  var _useWindowSize = useWindowSize(),\n      width = _useWindowSize.width;\n\n  var percent = props.percent,\n      indexParent = props.indexParent,\n      firstPlaceData = props.firstPlaceData;\n\n  var getDataColumnsValue = function getDataColumnsValue(prcnt) {\n    var index = getGraphIndex(width);\n\n    if (!prcnt % index) {\n      return prcnt / index;\n    } else if (prcnt % index === Number(prcnt)) {\n      return 1;\n    } else {\n      return (prcnt - prcnt % index) / index;\n    }\n  };\n\n  var getDataGraph = function getDataGraph(prcnt) {\n    var columnsValueInArray = [];\n    var columnsValue = getDataColumnsValue(prcnt);\n\n    for (var col = 1; col <= columnsValue; col++) {\n      columnsValueInArray.push(col);\n    }\n\n    return columnsValueInArray;\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: styles.chartPercentageContainer,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.dataGraphContainer,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.dataGraphBlocksContainer,\n          children: getDataGraph(percent).map(function (column, index) {\n            return /*#__PURE__*/_jsx(OnePercentsBlock, {\n              color: CHART_COLORS[indexParent + 1]\n            }, index);\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: classNames(styles.dataGraphContainerTotal, Number(percent) === firstPlaceData && styles.firstPlaceData)\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.dataGraphContainerPercents,\n          children: [percent, \"%\"]\n        })]\n      })\n    })\n  });\n}\n\nexport default ChartPercentege;\n\nvar OnePercentsBlock = function OnePercentsBlock(_ref) {\n  var color = _ref.color;\n\n  var _useWindowSize2 = useWindowSize(),\n      width = _useWindowSize2.width;\n\n  var block = [];\n\n  for (var i = 0; i < 5; ++i) {\n    block.push( /*#__PURE__*/_jsx(\"div\", {\n      className: styles.onePercentBlockItem,\n      style: {\n        borderColor: color,\n        backgroundColor: color // animation: width > 400 ? \"none\" : \"\",\n\n      }\n    }, i));\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      children: block\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: block\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}