{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport Fuse from 'fuse.js';\nimport { useDebouncedCallback } from 'use-debounce';\nimport validator from '../../utils/validation/validateEmail';\nimport { MainLayoutBorders } from '../../components/MainLayout/MainLayoutBorders';\nimport ArticlePreview from '../../components/Blog/ArticlePreview/ArticlePreview';\nimport Subscription from '../../components/Blog/Subscription/Subscription';\nimport Header from '../../components/Blog/Header/Header';\nimport PaginationComp from '../../components/Blog/Pagination/Pagination';\nimport CTA from '../../components/ReusableComponents/CTA/CTA';\nimport blogArticles from '../../assets/data/blogArticles.json';\nimport { en } from '../../config/en.js';\nimport { meta } from '../../config/metadata';\nimport routing from '../../config/routing';\nimport SubscriptionService from '../../services/subscription';\nimport { fuseOptions, blogFilters } from '../../config/constants';\nimport styles from '../../styles/pages/blog.module.scss';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Blog({\n  blogArticles,\n  canonicalLink\n}) {\n  const {\n    blog,\n    receiveNotifications,\n    subscribe\n  } = en;\n  let filteredByCategories = [];\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const {\n    0: debouncedSearch,\n    1: setDebouncedSearch\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    0: isConfirmed,\n    1: setConfirmed\n  } = useState(false);\n  const router = useRouter();\n  const {\n    query,\n    pathname,\n    asPath\n  } = router; //pagination\n\n  const pageNumber = query.page ? Number(query.page) : 1;\n  const PER_PAGE = 12;\n  const {\n    0: firstSliceValue,\n    1: setFirstSliceValue\n  } = useState(0);\n  const {\n    0: secondSliceValue,\n    1: setSecondSliceValue\n  } = useState(PER_PAGE);\n  useEffect(() => {\n    if (pageNumber > Math.ceil(filteredByCategories.length / PER_PAGE) || asPath.includes('page=1')) {\n      router.replace(pathname);\n    }\n  }, []);\n  useEffect(() => {\n    setFirstSliceValue(pageNumber * PER_PAGE - PER_PAGE);\n    setSecondSliceValue(pageNumber * PER_PAGE);\n  }, [pageNumber]); // end pagination\n\n  const category = router.pathname === routing().blog ? blogFilters[0].name : router.pathname.replace(`${routing().blog}/`, '');\n  const uppercaseCategory = `${category[0].toUpperCase()}${category.slice(1)}`;\n  const currentArticle = blogFilters.find(item => item.name === category); // filtration by search or categories\n\n  blogArticles.filter(article => {\n    if (category === blogFilters[0].name) {\n      filteredByCategories.push(article);\n    }\n\n    if (article.category.some(cat => cat.toLowerCase() === category)) {\n      filteredByCategories.push(article);\n    }\n\n    if (search === '') {\n      return blogArticles;\n    }\n\n    if (debouncedSearch) {\n      const fuse = new Fuse(filteredByCategories, fuseOptions);\n      filteredByCategories = fuse.search(debouncedSearch).map(el => el.item);\n      return filteredByCategories;\n    }\n\n    return filteredByCategories;\n  });\n  const handleDebounseSearch = useDebouncedCallback(value => {\n    setDebouncedSearch(value);\n  }, 400);\n\n  const handleSearchChange = value => {\n    setSearch(value);\n    handleDebounseSearch.callback(value);\n  };\n\n  const handleSubscriptionChange = ({\n    target\n  }) => {\n    if (error) {\n      setError('');\n    }\n\n    setEmail(target.value);\n  };\n\n  useEffect(() => {\n    if (validator.validate(email)) {\n      setError('');\n    }\n  }, [email]);\n\n  const handleSubmit = () => {\n    if (validator.validate(email)) {\n      SubscriptionService.subscribe(email, setConfirmed, setEmail, setError);\n    } else {\n      setError('Invalid email address!');\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(MainLayoutBorders, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [currentArticle.metaTitle || `Software Development Company Blog ${uppercaseCategory}`, ' ', \"- Page \", pageNumber, \" | WTT Solutions\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: `${meta.blogDescription} ${uppercaseCategory === 'All' ? '' : `- ${uppercaseCategory}`} | Page ${pageNumber}`\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"canonical\",\n        href: canonicalLink || 'https://wtt-solutions.com/blog'\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.headerWrapper,\n      children: [/*#__PURE__*/_jsxs(\"h1\", {\n        className: styles.blog,\n        children: [blog, \" \", uppercaseCategory !== 'All' ? uppercaseCategory : '', ' ', (uppercaseCategory === 'All' || uppercaseCategory === 'Insights') && `page ${pageNumber}`]\n      }), /*#__PURE__*/_jsx(Header, {\n        handleChange: e => handleSearchChange(e.target.value),\n        setSearchValue: setSearch,\n        searchValue: search\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.contentWrapper,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.middleLine\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.deskLines,\n        children: [/*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsx(\"div\", {})]\n      }), /*#__PURE__*/_jsx(ArticlePreview, {\n        data: filteredByCategories.slice(firstSliceValue, secondSliceValue),\n        searchValue: debouncedSearch,\n        activeFilter: category\n      }), filteredByCategories.length > PER_PAGE && /*#__PURE__*/_jsx(PaginationComp, {\n        pathname: pathname,\n        totalPages: Math.ceil(filteredByCategories.length / PER_PAGE),\n        pageNumber: pageNumber\n      }), /*#__PURE__*/_jsx(Subscription, {\n        error: error,\n        emailValue: email,\n        handleChange: handleSubscriptionChange,\n        handleSubmit: handleSubmit,\n        title: receiveNotifications,\n        btnTitle: subscribe,\n        isConfirmed: isConfirmed\n      })]\n    }), /*#__PURE__*/_jsx(CTA, {\n      CTATitle: en.CTATitle\n    })]\n  });\n}\n\nexport async function getServerSideProps() {\n  blogArticles.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime() //sort articles by date\n  );\n  return {\n    props: {\n      blogArticles\n    }\n  };\n}\nexport default Blog;","map":null,"metadata":{},"sourceType":"module"}