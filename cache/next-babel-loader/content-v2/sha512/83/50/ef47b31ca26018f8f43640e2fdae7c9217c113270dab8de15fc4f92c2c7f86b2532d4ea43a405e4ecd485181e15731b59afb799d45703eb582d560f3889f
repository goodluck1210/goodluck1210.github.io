{"ast":null,"code":"var _jsxFileName = \"E:\\\\corporate-website\\\\components\\\\ReusableComponents\\\\Filters\\\\Filters.js\";\nimport Link from 'next/link';\nimport { useTranslation } from \"next-export-i18n\";\nimport classes from './Filters.module.scss';\nimport classNames from 'classnames';\nimport { existingTechPages } from '../../../config/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filters = ({\n  expertise,\n  technologies,\n  wrapperClassName\n}) => {\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames(wrapperClassName, classes.wrapper),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.innerTitle,\n        children: t('expertise1')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.innerFilters,\n        children: expertise.map((name, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classNames(classes.filter),\n          children: name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.innerTitle,\n        children: t('technologies')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(classes.innerFilters, classes.innerFilters2),\n        children: technologies.map((name, idx) => {\n          const foundTech = existingTechPages.find(({\n            tech\n          }) => tech.includes(name.toLowerCase()));\n\n          if (foundTech) {\n            return /*#__PURE__*/_jsxDEV(Link, {\n              href: foundTech.link,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: classNames(classes.filter),\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classNames(classes.filter),\n            children: name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Filters;","map":{"version":3,"sources":["E:/corporate-website/components/ReusableComponents/Filters/Filters.js"],"names":["Link","useTranslation","classes","classNames","existingTechPages","Filters","expertise","technologies","wrapperClassName","t","wrapper","innerTitle","innerFilters","map","name","idx","filter","innerFilters2","foundTech","find","tech","includes","toLowerCase","link"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA;AAA3B,CAAD,KAAmD;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAQR,cAAc,EAA5B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEE,UAAU,CAACK,gBAAD,EAAmBN,OAAO,CAACQ,OAA3B,CAA1B;AAAA,4BACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAER,OAAO,CAACS,UAAvB;AAAA,kBAAoCF,CAAC,CAAC,YAAD;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACU,YAAxB;AAAA,kBACGN,SAAS,CAACO,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBACb;AAAa,UAAA,SAAS,EAAEZ,UAAU,CAACD,OAAO,CAACc,MAAT,CAAlC;AAAA,oBACGF;AADH,WAAQC,GAAR;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAEb,OAAO,CAACS,UAAvB;AAAA,kBAAoCF,CAAC,CAAC,cAAD;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEN,UAAU,CAACD,OAAO,CAACU,YAAT,EAAuBV,OAAO,CAACe,aAA/B,CAA1B;AAAA,kBACGV,YAAY,CAACM,GAAb,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/B,gBAAMG,SAAS,GAAGd,iBAAiB,CAACe,IAAlB,CAAuB,CAAC;AAAEC,YAAAA;AAAF,WAAD,KACvCA,IAAI,CAACC,QAAL,CAAcP,IAAI,CAACQ,WAAL,EAAd,CADgB,CAAlB;;AAGA,cAAIJ,SAAJ,EAAe;AACb,gCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAEA,SAAS,CAACK,IAAtB;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAEpB,UAAU,CAACD,OAAO,CAACc,MAAT,CAAxB;AAAA,0BAA2CF;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF,eAAiCC,GAAjC;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD;;AACD,8BACE;AAAa,YAAA,SAAS,EAAEZ,UAAU,CAACD,OAAO,CAACc,MAAT,CAAlC;AAAA,sBACGF;AADH,aAAQC,GAAR;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SAhBA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAvCD;;AAyCA,eAAeV,OAAf","sourcesContent":["import Link from 'next/link';\r\nimport { useTranslation } from \"next-export-i18n\";\r\nimport classes from './Filters.module.scss';\r\nimport classNames from 'classnames';\r\nimport { existingTechPages } from '../../../config/constants';\r\n\r\nconst Filters = ({ expertise, technologies, wrapperClassName }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className={classNames(wrapperClassName, classes.wrapper)}>\r\n      <div>\r\n        <h3 className={classes.innerTitle}>{t('expertise1')}</h3>\r\n        <div className={classes.innerFilters}>\r\n          {expertise.map((name, idx) => (\r\n            <p key={idx} className={classNames(classes.filter)}>\r\n              {name}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h3 className={classes.innerTitle}>{t('technologies')}</h3>\r\n        <div className={classNames(classes.innerFilters, classes.innerFilters2)}>\r\n          {technologies.map((name, idx) => {\r\n            const foundTech = existingTechPages.find(({ tech }) =>\r\n              tech.includes(name.toLowerCase())\r\n            );\r\n            if (foundTech) {\r\n              return (\r\n                <Link href={foundTech.link} key={idx}>\r\n                  <a className={classNames(classes.filter)}>{name}</a>\r\n                </Link>\r\n              );\r\n            }\r\n            return (\r\n              <p key={idx} className={classNames(classes.filter)}>\r\n                {name}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n"]},"metadata":{},"sourceType":"module"}