{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport Router from 'next/router';\n\nfunction saveScrollPos(url, shouldScrollRestore) {\n  if (window.innerWidth > 1199) {\n    var slide = sessionStorage.getItem('slide');\n    var scrollPos = {\n      y: window.innerHeight * slide,\n      slide: slide\n    };\n    sessionStorage.setItem(url, JSON.stringify(scrollPos));\n    sessionStorage.setItem('shouldScrollRestore', shouldScrollRestore || false);\n  } else {\n    var scrollY = sessionStorage.getItem('scrollY');\n    var _scrollPos = {\n      y: scrollY\n    };\n    sessionStorage.setItem(url, JSON.stringify(_scrollPos));\n  }\n}\n\nfunction restoreScrollPos(url) {\n  var scrollPos = JSON.parse(sessionStorage.getItem(url));\n\n  if (scrollPos && !url.includes('blog')) {\n    window.scrollTo({\n      top: scrollPos.y\n    });\n  }\n}\n\nexport default function useScrollRestoration(router) {\n  _s();\n\n  useEffect(function () {\n    if ('scrollRestoration' in window.history) {\n      var shouldScrollRestore = false;\n      window.history.scrollRestoration = 'manual';\n      restoreScrollPos(router.asPath);\n\n      var onBeforeUnload = function onBeforeUnload(event) {\n        saveScrollPos(router.asPath);\n        delete event['returnValue'];\n      };\n\n      var onRouteChangeStart = function onRouteChangeStart() {\n        saveScrollPos(router.asPath, shouldScrollRestore);\n      };\n\n      var onRouteChangeComplete = function onRouteChangeComplete(url) {\n        if (shouldScrollRestore) {\n          shouldScrollRestore = false;\n          restoreScrollPos(url);\n        }\n      };\n\n      window.addEventListener('beforeunload', onBeforeUnload);\n      Router.events.on('routeChangeStart', onRouteChangeStart);\n      Router.events.on('routeChangeComplete', onRouteChangeComplete);\n      Router.beforePopState(function () {\n        shouldScrollRestore = true;\n        return true;\n      });\n      return function () {\n        window.removeEventListener('beforeunload', onBeforeUnload);\n        Router.events.off('routeChangeStart', onRouteChangeStart);\n        Router.events.off('routeChangeComplete', onRouteChangeComplete);\n        Router.beforePopState(function () {\n          return true;\n        });\n      };\n    }\n  }, [router]);\n}\n\n_s(useScrollRestoration, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"sources":["E:/corporate-website/hooks/useScrollRestoration.js"],"names":["useEffect","Router","saveScrollPos","url","shouldScrollRestore","window","innerWidth","slide","sessionStorage","getItem","scrollPos","y","innerHeight","setItem","JSON","stringify","scrollY","restoreScrollPos","parse","includes","scrollTo","top","useScrollRestoration","router","history","scrollRestoration","asPath","onBeforeUnload","event","onRouteChangeStart","onRouteChangeComplete","addEventListener","events","on","beforePopState","removeEventListener","off"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\r\n\r\nimport Router from 'next/router';\r\n\r\nfunction saveScrollPos(url, shouldScrollRestore) {\r\n  if (window.innerWidth > 1199) {\r\n    let slide = sessionStorage.getItem('slide');\r\n    const scrollPos = { y: window.innerHeight * slide, slide: slide };\r\n    sessionStorage.setItem(url, JSON.stringify(scrollPos));\r\n    sessionStorage.setItem('shouldScrollRestore', shouldScrollRestore || false);\r\n  } else {\r\n    let scrollY = sessionStorage.getItem('scrollY');\r\n    const scrollPos = { y: scrollY };\r\n    sessionStorage.setItem(url, JSON.stringify(scrollPos));\r\n  }\r\n}\r\n\r\nfunction restoreScrollPos(url) {\r\n  const scrollPos = JSON.parse(sessionStorage.getItem(url));\r\n  if (scrollPos && !url.includes('blog') ) {\r\n    window.scrollTo({\r\n      top: scrollPos.y,\r\n    });\r\n  }\r\n}\r\n\r\nexport default function useScrollRestoration(router) {\r\n  useEffect(() => {\r\n    if ('scrollRestoration' in window.history) {\r\n      let shouldScrollRestore = false;\r\n      window.history.scrollRestoration = 'manual';\r\n      restoreScrollPos(router.asPath);\r\n\r\n      const onBeforeUnload = (event) => {\r\n        saveScrollPos(router.asPath);\r\n        delete event['returnValue'];\r\n      };\r\n\r\n      const onRouteChangeStart = () => {\r\n        saveScrollPos(router.asPath, shouldScrollRestore);\r\n      };\r\n\r\n      const onRouteChangeComplete = (url) => {\r\n        if (shouldScrollRestore) {\r\n          shouldScrollRestore = false;\r\n          restoreScrollPos(url);\r\n        }\r\n      };\r\n\r\n      window.addEventListener('beforeunload', onBeforeUnload);\r\n      Router.events.on('routeChangeStart', onRouteChangeStart);\r\n      Router.events.on('routeChangeComplete', onRouteChangeComplete);\r\n      Router.beforePopState(() => {\r\n        shouldScrollRestore = true;\r\n        return true;\r\n      });\r\n\r\n      return () => {\r\n        window.removeEventListener('beforeunload', onBeforeUnload);\r\n        Router.events.off('routeChangeStart', onRouteChangeStart);\r\n        Router.events.off('routeChangeComplete', onRouteChangeComplete);\r\n        Router.beforePopState(() => true);\r\n      };\r\n    }\r\n  }, [router]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}