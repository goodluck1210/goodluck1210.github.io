{"ast":null,"code":"import styles from './tools.module.scss';\nimport cn from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst NumList = ({\n  text,\n  idx,\n  isLetter = false\n}) => {\n  const alphabet = ['a', 'b', 'c', 'd'];\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: cn(styles.numListWrapper, isLetter && styles.paddingLeft),\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.numPoint,\n        children: isLetter ? alphabet[idx] : idx + 1\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.numListText,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: text\n          }\n        })\n      })]\n    })\n  });\n};\n\nconst DobleNumAndLetterList = ({\n  text,\n  id\n}) => {\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: typeof text === 'string' ? /*#__PURE__*/_jsx(NumList, {\n      text: text,\n      idx: id\n    }) : /*#__PURE__*/_jsx(_Fragment, {\n      children: text.map((el, i) => /*#__PURE__*/_jsx(NumList, {\n        text: el,\n        isLetter: true,\n        idx: i\n      }, i))\n    })\n  });\n};\n\nconst PointList = ({\n  text\n}) => {\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(\"span\", {\n      className: styles.pointListText,\n      dangerouslySetInnerHTML: {\n        __html: text\n      }\n    })\n  });\n};\n\nconst DoblePointList = ({\n  text,\n  id\n}) => {\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: typeof text === 'string' ? /*#__PURE__*/_jsx(PointList, {\n      text: text\n    }) : /*#__PURE__*/_jsx(\"li\", {\n      id: `list${id}`,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: styles.pointsListWrapper,\n        children: /*#__PURE__*/_jsx(\"ul\", {\n          children: text.map((item, i) => /*#__PURE__*/_jsx(PointList, {\n            text: item\n          }, i))\n        })\n      })\n    })\n  });\n};\n\nconst LinkedPointList = ({\n  link,\n  boldText,\n  text\n}) => {\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsxs(\"span\", {\n      className: styles.pointListText,\n      children: [/*#__PURE__*/_jsx(\"a\", {\n        className: styles.link,\n        href: link,\n        target: \"_blank\",\n        rel: \"nofollow\",\n        children: boldText\n      }), text]\n    })\n  });\n};\n\nconst LinesTable = ({\n  title,\n  data\n}) => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.tableWrapper,\n    children: /*#__PURE__*/_jsxs(\"table\", {\n      className: styles.table,\n      children: [/*#__PURE__*/_jsx(\"tr\", {\n        children: /*#__PURE__*/_jsx(\"th\", {\n          colSpan: \"2\",\n          className: styles.tableHeader,\n          children: title\n        })\n      }), data.map((el, i) => {\n        return /*#__PURE__*/_jsxs(\"tr\", {\n          children: [/*#__PURE__*/_jsx(\"th\", {\n            className: styles.table1stItem,\n            children: el.first\n          }), /*#__PURE__*/_jsx(\"td\", {\n            children: el.second\n          })]\n        }, i);\n      })]\n    })\n  });\n};\n\nconst LinesTableMobile = ({\n  title,\n  data\n}) => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.tableWrapper,\n    children: /*#__PURE__*/_jsx(\"table\", {\n      className: styles.table,\n      children: /*#__PURE__*/_jsxs(\"tbody\", {\n        children: [/*#__PURE__*/_jsx(\"tr\", {\n          children: /*#__PURE__*/_jsx(\"th\", {\n            className: styles.tableHeader,\n            children: title\n          })\n        }), data.map((el, i) => {\n          return /*#__PURE__*/_jsx(\"tr\", {\n            children: /*#__PURE__*/_jsxs(\"td\", {\n              className: styles.table1stItem,\n              children: [/*#__PURE__*/_jsx(\"b\", {\n                children: el.first\n              }), /*#__PURE__*/_jsx(\"br\", {}), el.second]\n            })\n          }, i);\n        })]\n      })\n    })\n  });\n};\n\nexport { LinesTableMobile, LinesTable, PointList, LinkedPointList, NumList, DoblePointList, DobleNumAndLetterList };","map":null,"metadata":{},"sourceType":"module"}