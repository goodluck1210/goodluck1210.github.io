{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst fetcher = async (url, init) => {\n  return fetch(url, _objectSpread(_objectSpread({}, init), {}, {\n    headers: {\n      Accept: 'application/json'\n    }\n  })).then(res => res.json()).catch(error => error);\n};\n\nexport default fetcher;","map":{"version":3,"sources":["E:/corporate-website/pages/fetcher.js"],"names":["fetcher","url","init","fetch","headers","Accept","then","res","json","catch","error"],"mappings":";;;;;;AAAA,MAAMA,OAAO,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AACnC,SAAOC,KAAK,CAACF,GAAD,kCACPC,IADO;AAEVE,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAFC,KAAL,CAMJC,IANI,CAMCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANR,EAOJC,KAPI,CAOEC,KAAK,IAAIA,KAPX,CAAP;AAQD,CATD;;AAWA,eAAeV,OAAf","sourcesContent":["const fetcher = async (url, init) => {\r\n  return fetch(url, {\r\n    ...init,\r\n    headers: {\r\n      Accept: 'application/json',\r\n    },\r\n  })\r\n    .then(res => res.json())\r\n    .catch(error => error)\r\n}\r\n\r\nexport default fetcher\r\n"]},"metadata":{},"sourceType":"module"}