{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { EMAIL_SENDER_URL } from '../config/constants';\nimport api from './api';\nexport default class SendEmailService {\n  static send(credentials) {\n    const isMessageInCredentials = credentials.message.trim();\n\n    const data = _objectSpread({\n      name: credentials.name,\n      email: credentials.email\n    }, isMessageInCredentials && {\n      message: credentials.message\n    });\n\n    fetch(EMAIL_SENDER_URL, {\n      method: 'POST',\n      headers: {\n        origin: 'http://localhost:3000'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.ok ? res : Promise.reject(res)).then(() => {\n      return api.post('/api/request/rfsd1sdsfds454v36789s3', _objectSpread(_objectSpread({\n        name: credentials.name,\n        email: credentials.email\n      }, isMessageInCredentials && {\n        message: credentials.message\n      }), {}, {\n        response: 'good',\n        form_name: credentials.formName\n      }));\n    }).catch(() => {\n      return api.post('/api/request/rfsd1sdsfds454v36789s3', _objectSpread(_objectSpread({\n        name: credentials.name,\n        email: credentials.email\n      }, isMessageInCredentials && {\n        message: credentials.message\n      }), {}, {\n        response: 'bad',\n        form_name: credentials.formName\n      }));\n    });\n  }\n\n}","map":{"version":3,"sources":["E:/corporate-website/services/sendEmail.js"],"names":["EMAIL_SENDER_URL","api","SendEmailService","send","credentials","isMessageInCredentials","message","trim","data","name","email","fetch","method","headers","origin","body","JSON","stringify","then","res","ok","Promise","reject","post","response","form_name","formName","catch"],"mappings":";;;;;;AAAA,SAASA,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,eAAe,MAAMC,gBAAN,CAAuB;AACzB,SAAJC,IAAI,CAACC,WAAD,EAAc;AACvB,UAAMC,sBAAsB,GAAGD,WAAW,CAACE,OAAZ,CAAoBC,IAApB,EAA/B;;AAEA,UAAMC,IAAI;AACRC,MAAAA,IAAI,EAAEL,WAAW,CAACK,IADV;AAERC,MAAAA,KAAK,EAAEN,WAAW,CAACM;AAFX,OAGJL,sBAAsB,IAAI;AAAEC,MAAAA,OAAO,EAAEF,WAAW,CAACE;AAAvB,KAHtB,CAAV;;AAMAK,IAAAA,KAAK,CAACX,gBAAD,EAAmB;AACtBY,MAAAA,MAAM,EAAE,MADc;AAEtBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD,OAFa;AAKtBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALgB,KAAnB,CAAL,CAOCU,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,EAAJ,GAASD,GAAT,GAAeE,OAAO,CAACC,MAAR,CAAeH,GAAf,CAP5B,EAQGD,IARH,CAQQ,MAAM;AACV,aAAOjB,GAAG,CAACsB,IAAJ,CAAS,qCAAT;AACLd,QAAAA,IAAI,EAAEL,WAAW,CAACK,IADb;AAELC,QAAAA,KAAK,EAAEN,WAAW,CAACM;AAFd,SAGDL,sBAAsB,IAAI;AAAEC,QAAAA,OAAO,EAAEF,WAAW,CAACE;AAAvB,OAHzB;AAILkB,QAAAA,QAAQ,EAAE,MAJL;AAKLC,QAAAA,SAAS,EAAErB,WAAW,CAACsB;AALlB,SAAP;AAOD,KAhBH,EAiBGC,KAjBH,CAiBS,MAAM;AACX,aAAO1B,GAAG,CAACsB,IAAJ,CAAS,qCAAT;AACLd,QAAAA,IAAI,EAAEL,WAAW,CAACK,IADb;AAELC,QAAAA,KAAK,EAAEN,WAAW,CAACM;AAFd,SAGDL,sBAAsB,IAAI;AAAEC,QAAAA,OAAO,EAAEF,WAAW,CAACE;AAAvB,OAHzB;AAILkB,QAAAA,QAAQ,EAAE,KAJL;AAKLC,QAAAA,SAAS,EAAErB,WAAW,CAACsB;AALlB,SAAP;AAOD,KAzBH;AA0BD;;AApCmC","sourcesContent":["import { EMAIL_SENDER_URL } from '../config/constants';\r\nimport api from './api';\r\n\r\nexport default class SendEmailService {\r\n  static send(credentials) {\r\n    const isMessageInCredentials = credentials.message.trim();\r\n\r\n    const data = {\r\n      name: credentials.name,\r\n      email: credentials.email,\r\n      ...(isMessageInCredentials && { message: credentials.message }),\r\n    };\r\n\r\n    fetch(EMAIL_SENDER_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        origin: 'http://localhost:3000',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n    .then(res => res.ok ? res : Promise.reject(res))\r\n      .then(() => {\r\n        return api.post('/api/request/rfsd1sdsfds454v36789s3', {\r\n          name: credentials.name,\r\n          email: credentials.email,\r\n          ...(isMessageInCredentials && { message: credentials.message }),\r\n          response: 'good',\r\n          form_name: credentials.formName,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        return api.post('/api/request/rfsd1sdsfds454v36789s3', {\r\n          name: credentials.name,\r\n          email: credentials.email,\r\n          ...(isMessageInCredentials && { message: credentials.message }),\r\n          response: 'bad',\r\n          form_name: credentials.formName,\r\n        });\r\n      });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}