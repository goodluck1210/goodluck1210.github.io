{"ast":null,"code":"exports.validate = function (email) {\n  if (!email) return false;\n  const emailParts = email.split('@');\n  if (emailParts.length !== 2) return false;\n  const account = emailParts[0];\n  const address = emailParts[1];\n  if (account.length > 64) return false;else if (account.includes('_')) return false;else if (address.length > 255) return false;\n  const domainParts = address.split('.');\n  if (domainParts.some(part => {\n    return part.length > 63;\n  })) return false;\n  const sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\n  const sDtext = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\n  const sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\n  const sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\n  const sDomainLiteral = '\\\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\\\x5d';\n  const sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\n  const sDomain_ref = sAtom;\n  const sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';\n  const sWord = '(' + sAtom + '|' + sQuotedString + ')';\n  const sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\n  const sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\n  const sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\n\n  const sValidEmail = '^' + sAddrSpec + '$'; // as whole string\n\n  const reValidEmail = new RegExp(sValidEmail);\n  return reValidEmail.test(email);\n};","map":null,"metadata":{},"sourceType":"script"}