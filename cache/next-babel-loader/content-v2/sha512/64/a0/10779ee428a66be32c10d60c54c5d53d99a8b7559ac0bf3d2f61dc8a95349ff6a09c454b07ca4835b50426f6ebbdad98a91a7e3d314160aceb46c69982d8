{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\"; // the translations\n// (tip move them in a JSON file and import them,\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\n// const resources = {\n//   en: {\n//     translation: {\n//       \"Welcome to React\": \"english\"\n//     }\n//   },\n//   de: {\n//     translation: {\n//       \"Welcome to React\": \"German\"\n//     }\n//   }\n// };\n\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n.init({\n  // resources,\n  lng: \"en\",\n  // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n  // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n  // if you're using a language detector, do not define the lng option\n  fallbackLng: 'en',\n  whitelist: ['en', 'de'],\n  interpolation: {\n    escapeValue: false // react already safes from xss\n\n  },\n  backend: {\n    loadPath: '/locales/{{lng}}/{{ns}}.json',\n    addPath: '/locales/add/{{lng}}/{{ns}}'\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["E:/corporate-website/pages/i18n.js"],"names":["i18n","initReactI18next","use","init","lng","fallbackLng","whitelist","interpolation","escapeValue","backend","loadPath","addPath"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,IAAI,CACDE,GADH,CACOD,gBADP,EACyB;AADzB,CAEGE,IAFH,CAEQ;AACJ;AACAC,EAAAA,GAAG,EAAE,IAFD;AAEO;AACX;AACA;AAEAC,EAAAA,WAAW,EAAE,IANT;AAOJC,EAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,IAAP,CAPP;AASJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACM;;AADN,GATX;AAaJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,8BADH;AAEPC,IAAAA,OAAO,EAAE;AAFF;AAbL,CAFR;AAqBE,eAAeX,IAAf","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\n// the translations\r\n// (tip move them in a JSON file and import them,\r\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\r\n// const resources = {\r\n//   en: {\r\n//     translation: {\r\n//       \"Welcome to React\": \"english\"\r\n//     }\r\n//   },\r\n//   de: {\r\n//     translation: {\r\n//       \"Welcome to React\": \"German\"\r\n//     }\r\n//   }\r\n// };\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    // resources,\r\n    lng: \"en\", // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\r\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\r\n    // if you're using a language detector, do not define the lng option\r\n\r\n    fallbackLng: 'en',\r\n    whitelist: ['en', 'de'],\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    },\r\n\r\n    backend: {\r\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\r\n      addPath: '/locales/add/{{lng}}/{{ns}}',\r\n    },\r\n  });\r\n\r\n  export default i18n;"]},"metadata":{},"sourceType":"module"}