{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nimport { en } from '../../config/en';\nimport { MainLayoutBorders } from '../MainLayout/MainLayoutBorders';\nimport styles from './Preloader.module.scss';\nimport Ico from '../../assets/icons/loaderIcon.svg';\nimport { Transition } from 'react-transition-group';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Preloader = () => {\n  const {\n    0: isDisplay,\n    1: setIsDisplay\n  } = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsDisplay(true);\n    }, 200);\n  }, []);\n  const transitionStyles = {\n    entering: {\n      opacity: 0.5\n    },\n    entered: {\n      opacity: 1\n    },\n    exiting: {\n      opacity: 0.5\n    },\n    exited: {\n      opacity: 0\n    }\n  };\n  const defaultStyle = {\n    transition: `opacity ${1000}ms ease-in-out`,\n    opacity: 0\n  };\n  return /*#__PURE__*/_jsx(Transition, {\n    appear: true,\n    in: true,\n    timeout: {\n      enter: 1000,\n      exit: 2000\n    },\n    children: state => {\n      return /*#__PURE__*/_jsx(_Fragment, {\n        children: isDisplay && /*#__PURE__*/_jsx(MainLayoutBorders, {\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: styles.preloader,\n            style: _objectSpread(_objectSpread({}, defaultStyle), transitionStyles[state]),\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.preloaderLogoWrapper,\n              children: [/*#__PURE__*/_jsx(Ico, {\n                className: styles.preloaderIcon\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                children: en.mainTitle\n              })]\n            })\n          })\n        })\n      });\n    }\n  });\n};\n\nexport default Preloader;","map":null,"metadata":{},"sourceType":"module"}