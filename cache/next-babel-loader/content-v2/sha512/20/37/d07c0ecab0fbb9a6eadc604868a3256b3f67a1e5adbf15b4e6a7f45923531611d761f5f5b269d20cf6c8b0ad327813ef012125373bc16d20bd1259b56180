{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useCallback, useEffect } from 'react';\nimport Image from 'next/image';\nimport { useTranslation } from \"next-export-i18n\";\nimport styles from './CTA.module.scss';\nimport Form from '../../CTAForm/Form';\nimport Modal from '../../modal/Modal.js';\nimport cn from 'classnames';\nimport { FORM_NAMES } from '../../../config/constants';\nimport SendEmail from '../../../services/sendEmail';\nimport validator from '../../../utils/validation/validateEmail';\nimport setBackground from '../../../utils/setBackground';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst CTA = ({\n  CTATitle,\n  topTitle,\n  inputClass,\n  wrapperClass\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const CTAForm = t('CTAForm');\n  const submitForm = t('submitForm');\n  const getInTouchModalText = t('getInTouchModalText');\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    email: '',\n    message: '',\n    formName: FORM_NAMES.PAGES_FORM\n  });\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  useEffect(() => {\n    setError('');\n  }, [values.email]);\n  const handleChange = useCallback(({\n    target\n  }) => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [target.name]: target.value\n    }));\n  }, [setValues, values]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validator.validate(values.email)) {\n      SendEmail.send(values);\n      setValues({\n        name: '',\n        email: '',\n        message: '',\n        formName: FORM_NAMES.PAGES_FORM\n      });\n      setModal(!modal);\n    } else {\n      setError('Invalid email address!');\n      return;\n    }\n  };\n\n  const messageImages = {\n    mb: '/images/CTA/cloudMob.png',\n    tabl: '/images/CTA/cloudTabl.png',\n    desk: '/images/CTA/cloudDesk.png'\n  };\n  const ceoImages = {\n    mb: '/images/CTA/ceoMob.png',\n    tabl: '/images/CTA/ceoTabl.png',\n    desk: '/images/CTA/ceoDesk.png'\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: cn(styles.wrapper, wrapperClass),\n    children: [topTitle && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.mainTitle,\n      children: /*#__PURE__*/_jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: topTitle\n        }\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.photosWrapper,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.ceoWrapper,\n        children: /*#__PURE__*/_jsx(Image, {\n          layout: \"fill\",\n          src: setBackground(ceoImages),\n          alt: \"img\",\n          quality: 20\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.messageWrapper,\n        children: [/*#__PURE__*/_jsx(Image, {\n          layout: \"fill\",\n          src: setBackground(messageImages),\n          alt: \"img\",\n          quality: 75\n        }), /*#__PURE__*/_jsxs(\"p\", {\n          children: [/*#__PURE__*/_jsx(\"span\", {\n            children: t('CTAMessage.name')\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"span\", {\n            children: t('CTAMessage.position')\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"span\", {\n            children: t('CTAMessage.message')\n          })]\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.formWrapper,\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        children: CTATitle\n      }), /*#__PURE__*/_jsx(Form, {\n        data: CTAForm,\n        btnTitle: submitForm,\n        values: values,\n        formClassName: inputClass,\n        handleChange: handleChange,\n        handleSubmit: handleSubmit,\n        errors: {\n          email: error\n        }\n      }), modal && /*#__PURE__*/_jsx(Modal, {\n        toggle: toggle,\n        modal: modal,\n        bodyText: getInTouchModalText\n      })]\n    })]\n  });\n};\n\nexport default CTA;","map":null,"metadata":{},"sourceType":"module"}